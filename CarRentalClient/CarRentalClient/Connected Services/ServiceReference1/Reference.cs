//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarDetails", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class CarDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnginePowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductionYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarBrand {
            get {
                return this.CarBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CarBrandField, value) != true)) {
                    this.CarBrandField = value;
                    this.RaisePropertyChanged("CarBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarModel {
            get {
                return this.CarModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CarModelField, value) != true)) {
                    this.CarModelField = value;
                    this.RaisePropertyChanged("CarModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnginePower {
            get {
                return this.EnginePowerField;
            }
            set {
                if ((this.EnginePowerField.Equals(value) != true)) {
                    this.EnginePowerField = value;
                    this.RaisePropertyChanged("EnginePower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelTypeField, value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionYear {
            get {
                return this.ProductionYearField;
            }
            set {
                if ((this.ProductionYearField.Equals(value) != true)) {
                    this.ProductionYearField = value;
                    this.RaisePropertyChanged("ProductionYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="People", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class People : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surename {
            get {
                return this.SurenameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurenameField, value) != true)) {
                    this.SurenameField = value;
                    this.RaisePropertyChanged("Surename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCarDetails", ReplyAction="http://tempuri.org/IService1/InsertCarDetailsResponse")]
        string InsertCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCarDetails", ReplyAction="http://tempuri.org/IService1/InsertCarDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCarDetails", ReplyAction="http://tempuri.org/IService1/DeleteCarDetailsResponse")]
        string DeleteCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCarDetails", ReplyAction="http://tempuri.org/IService1/DeleteCarDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCarDetails", ReplyAction="http://tempuri.org/IService1/UpdateCarDetailsResponse")]
        string UpdateCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCarDetails", ReplyAction="http://tempuri.org/IService1/UpdateCarDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCarDetails", ReplyAction="http://tempuri.org/IService1/SelectCarDetailsResponse")]
        System.Data.DataSet SelectCarDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCarDetails", ReplyAction="http://tempuri.org/IService1/SelectCarDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectCarDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RentCar", ReplyAction="http://tempuri.org/IService1/RentCarResponse")]
        string RentCar(CarRentalClient.ServiceReference1.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RentCar", ReplyAction="http://tempuri.org/IService1/RentCarResponse")]
        System.Threading.Tasks.Task<string> RentCarAsync(CarRentalClient.ServiceReference1.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePeopleDetails", ReplyAction="http://tempuri.org/IService1/DeletePeopleDetailsResponse")]
        string DeletePeopleDetails(CarRentalClient.ServiceReference1.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePeopleDetails", ReplyAction="http://tempuri.org/IService1/DeletePeopleDetailsResponse")]
        System.Threading.Tasks.Task<string> DeletePeopleDetailsAsync(CarRentalClient.ServiceReference1.People people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectPeopleDetails", ReplyAction="http://tempuri.org/IService1/SelectPeopleDetailsResponse")]
        System.Data.DataSet SelectPeopleDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectPeopleDetails", ReplyAction="http://tempuri.org/IService1/SelectPeopleDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectPeopleDetailsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CarRentalClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CarRentalClient.ServiceReference1.IService1>, CarRentalClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.InsertCarDetails(carInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.InsertCarDetailsAsync(carInfo);
        }
        
        public string DeleteCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.DeleteCarDetails(carInfo);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.DeleteCarDetailsAsync(carInfo);
        }
        
        public string UpdateCarDetails(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.UpdateCarDetails(carInfo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCarDetailsAsync(CarRentalClient.ServiceReference1.CarDetails carInfo) {
            return base.Channel.UpdateCarDetailsAsync(carInfo);
        }
        
        public System.Data.DataSet SelectCarDetails() {
            return base.Channel.SelectCarDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectCarDetailsAsync() {
            return base.Channel.SelectCarDetailsAsync();
        }
        
        public string RentCar(CarRentalClient.ServiceReference1.People people) {
            return base.Channel.RentCar(people);
        }
        
        public System.Threading.Tasks.Task<string> RentCarAsync(CarRentalClient.ServiceReference1.People people) {
            return base.Channel.RentCarAsync(people);
        }
        
        public string DeletePeopleDetails(CarRentalClient.ServiceReference1.People people) {
            return base.Channel.DeletePeopleDetails(people);
        }
        
        public System.Threading.Tasks.Task<string> DeletePeopleDetailsAsync(CarRentalClient.ServiceReference1.People people) {
            return base.Channel.DeletePeopleDetailsAsync(people);
        }
        
        public System.Data.DataSet SelectPeopleDetails() {
            return base.Channel.SelectPeopleDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectPeopleDetailsAsync() {
            return base.Channel.SelectPeopleDetailsAsync();
        }
    }
}
